// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package rgoc

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)


type Rgoc_ScreenObjType int
const (
	Rgoc_ScreenObjType__Code Rgoc_ScreenObjType = 0
	Rgoc_ScreenObjType__Show Rgoc_ScreenObjType = 1
	Rgoc_ScreenObjType__PlayVideo Rgoc_ScreenObjType = 2
	Rgoc_ScreenObjType__PlayMusic Rgoc_ScreenObjType = 3
	Rgoc_ScreenObjType__StopMusic Rgoc_ScreenObjType = 4
	Rgoc_ScreenObjType__PlayChannel Rgoc_ScreenObjType = 5
	Rgoc_ScreenObjType__StopChannel Rgoc_ScreenObjType = 6
	Rgoc_ScreenObjType__Text Rgoc_ScreenObjType = 7
	Rgoc_ScreenObjType__Timer Rgoc_ScreenObjType = 8
	Rgoc_ScreenObjType__Key Rgoc_ScreenObjType = 9
	Rgoc_ScreenObjType__Button Rgoc_ScreenObjType = 10
	Rgoc_ScreenObjType__Bar Rgoc_ScreenObjType = 11
)

type Rgoc_SpecialTransformType int
const (
	Rgoc_SpecialTransformType__Center Rgoc_SpecialTransformType = 0
	Rgoc_SpecialTransformType__XCenter Rgoc_SpecialTransformType = 1
	Rgoc_SpecialTransformType__YCenter Rgoc_SpecialTransformType = 2
	Rgoc_SpecialTransformType__AxisCenter Rgoc_SpecialTransformType = 3
)

type Rgoc_ObjectType int
const (
	Rgoc_ObjectType__Null Rgoc_ObjectType = 0
	Rgoc_ObjectType__Boolean Rgoc_ObjectType = 1
	Rgoc_ObjectType__Integer Rgoc_ObjectType = 2
	Rgoc_ObjectType__Float Rgoc_ObjectType = 3
	Rgoc_ObjectType__String Rgoc_ObjectType = 4
	Rgoc_ObjectType__Array Rgoc_ObjectType = 5
	Rgoc_ObjectType__Code Rgoc_ObjectType = 6
	Rgoc_ObjectType__LabelObject Rgoc_ObjectType = 7
	Rgoc_ObjectType__ScreenObject Rgoc_ObjectType = 8
	Rgoc_ObjectType__Error Rgoc_ObjectType = 99
)

type Rgoc_LabelObjType int
const (
	Rgoc_LabelObjType__Code Rgoc_LabelObjType = 0
	Rgoc_LabelObjType__Show Rgoc_LabelObjType = 1
	Rgoc_LabelObjType__Hide Rgoc_LabelObjType = 2
	Rgoc_LabelObjType__PlayVideo Rgoc_LabelObjType = 3
	Rgoc_LabelObjType__StopVideo Rgoc_LabelObjType = 4
	Rgoc_LabelObjType__PlayMusic Rgoc_LabelObjType = 5
	Rgoc_LabelObjType__StopMusic Rgoc_LabelObjType = 6
	Rgoc_LabelObjType__PlayChannel Rgoc_LabelObjType = 7
	Rgoc_LabelObjType__StopChannel Rgoc_LabelObjType = 8
	Rgoc_LabelObjType__Say Rgoc_LabelObjType = 9
	Rgoc_LabelObjType__Pause Rgoc_LabelObjType = 10
	Rgoc_LabelObjType__Call Rgoc_LabelObjType = 11
	Rgoc_LabelObjType__Jump Rgoc_LabelObjType = 12
)

type Rgoc_AnimeType int
const (
	Rgoc_AnimeType__Alpha Rgoc_AnimeType = 0
	Rgoc_AnimeType__Rotate Rgoc_AnimeType = 1
	Rgoc_AnimeType__XPos Rgoc_AnimeType = 2
	Rgoc_AnimeType__YPos Rgoc_AnimeType = 3
)
type Rgoc struct {
	Magic []byte
	RgocVersion string
	Revision string
	NumLabels uint64
	Labels []*Rgoc_Label
	NumScreens uint64
	Screens []*Rgoc_Screen
	NumCodeSpecs uint64
	CodeSpecs []*Rgoc_CodeSpec
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc() *Rgoc {
	return &Rgoc{
	}
}

func (this *Rgoc) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	this.Magic = tmp1
	if !(bytes.Equal(this.Magic, []uint8{82, 69, 78, 71})) {
		return kaitai.NewValidationNotEqualError([]uint8{82, 69, 78, 71}, this.Magic, this._io, "/seq/0")
	}
	tmp2, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.RgocVersion = string(tmp2)
	tmp3, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Revision = string(tmp3)
	tmp4, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumLabels = uint64(tmp4)
	for i := 0; i < int(this.NumLabels); i++ {
		_ = i
		tmp5 := NewRgoc_Label()
		err = tmp5.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Labels = append(this.Labels, tmp5)
	}
	tmp6, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumScreens = uint64(tmp6)
	for i := 0; i < int(this.NumScreens); i++ {
		_ = i
		tmp7 := NewRgoc_Screen()
		err = tmp7.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Screens = append(this.Screens, tmp7)
	}
	tmp8, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumCodeSpecs = uint64(tmp8)
	for i := 0; i < int(this.NumCodeSpecs); i++ {
		_ = i
		tmp9 := NewRgoc_CodeSpec()
		err = tmp9.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.CodeSpecs = append(this.CodeSpecs, tmp9)
	}
	return err
}
type Rgoc_Show struct {
	Name string
	Transform *Rgoc_Transform
	NumAnime uint64
	Anime []*Rgoc_Anime
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Show() *Rgoc_Show {
	return &Rgoc_Show{
	}
}

func (this *Rgoc_Show) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp10, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp10)
	tmp11 := NewRgoc_Transform()
	err = tmp11.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Transform = tmp11
	tmp12, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumAnime = uint64(tmp12)
	for i := 0; i < int(this.NumAnime); i++ {
		_ = i
		tmp13 := NewRgoc_Anime()
		err = tmp13.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Anime = append(this.Anime, tmp13)
	}
	return err
}
type Rgoc_Jump struct {
	LabelName string
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_Jump() *Rgoc_Jump {
	return &Rgoc_Jump{
	}
}

func (this *Rgoc_Jump) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp14, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.LabelName = string(tmp14)
	return err
}
type Rgoc_Center struct {
	Placeholder []byte
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_SpecialTransform
}
func NewRgoc_Center() *Rgoc_Center {
	return &Rgoc_Center{
	}
}

func (this *Rgoc_Center) Read(io *kaitai.Stream, parent *Rgoc_SpecialTransform, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp15, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	this.Placeholder = tmp15
	if !(bytes.Equal(this.Placeholder, []uint8{0})) {
		return kaitai.NewValidationNotEqualError([]uint8{0}, this.Placeholder, this._io, "/types/center/seq/0")
	}
	return err
}
type Rgoc_AxisCenter struct {
	Axis *Rgoc_Vec2
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_SpecialTransform
}
func NewRgoc_AxisCenter() *Rgoc_AxisCenter {
	return &Rgoc_AxisCenter{
	}
}

func (this *Rgoc_AxisCenter) Read(io *kaitai.Stream, parent *Rgoc_SpecialTransform, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp16 := NewRgoc_Vec2()
	err = tmp16.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Axis = tmp16
	return err
}
type Rgoc_Uuid struct {
	Body []byte
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Uuid() *Rgoc_Uuid {
	return &Rgoc_Uuid{
	}
}

func (this *Rgoc_Uuid) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp17, err := this._io.ReadBytes(int(16))
	if err != nil {
		return err
	}
	this.Body = tmp17
	return err
}
type Rgoc_ScreenObject struct {
	Type Rgoc_ScreenObjType
	Body interface{}
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_Screen
}
func NewRgoc_ScreenObject() *Rgoc_ScreenObject {
	return &Rgoc_ScreenObject{
	}
}

func (this *Rgoc_ScreenObject) Read(io *kaitai.Stream, parent *Rgoc_Screen, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp18, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Type = Rgoc_ScreenObjType(tmp18)
	switch (this.Type) {
	case Rgoc_ScreenObjType__Key:
		tmp19 := NewRgoc_Key()
		err = tmp19.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp19
	case Rgoc_ScreenObjType__Code:
		tmp20 := NewRgoc_Code()
		err = tmp20.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp20
	case Rgoc_ScreenObjType__Text:
		tmp21 := NewRgoc_Text()
		err = tmp21.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp21
	case Rgoc_ScreenObjType__Timer:
		tmp22 := NewRgoc_Timer()
		err = tmp22.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp22
	case Rgoc_ScreenObjType__StopChannel:
		tmp23 := NewRgoc_StopChannel()
		err = tmp23.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp23
	case Rgoc_ScreenObjType__PlayVideo:
		tmp24 := NewRgoc_PlayVideo()
		err = tmp24.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp24
	case Rgoc_ScreenObjType__StopMusic:
		tmp25 := NewRgoc_StopMusic()
		err = tmp25.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp25
	case Rgoc_ScreenObjType__Bar:
		tmp26 := NewRgoc_Bar()
		err = tmp26.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp26
	case Rgoc_ScreenObjType__Button:
		tmp27 := NewRgoc_Button()
		err = tmp27.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp27
	case Rgoc_ScreenObjType__PlayChannel:
		tmp28 := NewRgoc_PlayChannel()
		err = tmp28.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp28
	case Rgoc_ScreenObjType__Show:
		tmp29 := NewRgoc_Show()
		err = tmp29.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp29
	case Rgoc_ScreenObjType__PlayMusic:
		tmp30 := NewRgoc_PlayMusic()
		err = tmp30.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp30
	}
	return err
}
type Rgoc_Label struct {
	Name string
	NumObj uint64
	Obj []*Rgoc_LabelObject
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc
}
func NewRgoc_Label() *Rgoc_Label {
	return &Rgoc_Label{
	}
}

func (this *Rgoc_Label) Read(io *kaitai.Stream, parent *Rgoc, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp31, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp31)
	tmp32, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumObj = uint64(tmp32)
	for i := 0; i < int(this.NumObj); i++ {
		_ = i
		tmp33 := NewRgoc_LabelObject()
		err = tmp33.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Obj = append(this.Obj, tmp33)
	}
	return err
}
type Rgoc_Pause struct {
	Time float64
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_Pause() *Rgoc_Pause {
	return &Rgoc_Pause{
	}
}

func (this *Rgoc_Pause) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp34, err := this._io.ReadF8le()
	if err != nil {
		return err
	}
	this.Time = float64(tmp34)
	return err
}
type Rgoc_PlayChannel struct {
	Path string
	ChanName string
	Ms uint64
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_PlayChannel() *Rgoc_PlayChannel {
	return &Rgoc_PlayChannel{
	}
}

func (this *Rgoc_PlayChannel) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp35, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Path = string(tmp35)
	tmp36, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.ChanName = string(tmp36)
	tmp37, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.Ms = uint64(tmp37)
	return err
}
type Rgoc_PlayVideo struct {
	Name string
	Transform *Rgoc_Transform
	Loop bool
	NumAnime uint64
	Anime []*Rgoc_Anime
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_PlayVideo() *Rgoc_PlayVideo {
	return &Rgoc_PlayVideo{
	}
}

func (this *Rgoc_PlayVideo) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp38, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp38)
	tmp39 := NewRgoc_Transform()
	err = tmp39.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Transform = tmp39
	tmp40, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Loop = tmp40 != 0
	this._io.AlignToByte()
	tmp41, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumAnime = uint64(tmp41)
	for i := 0; i < int(this.NumAnime); i++ {
		_ = i
		tmp42 := NewRgoc_Anime()
		err = tmp42.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Anime = append(this.Anime, tmp42)
	}
	return err
}
type Rgoc_Text struct {
	Text string
	FontName string
	Transform *Rgoc_Transform
	Color *Rgoc_Color
	TypingFx bool
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_ScreenObject
}
func NewRgoc_Text() *Rgoc_Text {
	return &Rgoc_Text{
	}
}

func (this *Rgoc_Text) Read(io *kaitai.Stream, parent *Rgoc_ScreenObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp43, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Text = string(tmp43)
	tmp44, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.FontName = string(tmp44)
	tmp45 := NewRgoc_Transform()
	err = tmp45.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Transform = tmp45
	tmp46 := NewRgoc_Color()
	err = tmp46.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Color = tmp46
	tmp47, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.TypingFx = tmp47 != 0
	return err
}
type Rgoc_Color struct {
	R uint8
	G uint8
	B uint8
	A uint8
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_Text
}
func NewRgoc_Color() *Rgoc_Color {
	return &Rgoc_Color{
	}
}

func (this *Rgoc_Color) Read(io *kaitai.Stream, parent *Rgoc_Text, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp48, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.R = tmp48
	tmp49, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.G = tmp49
	tmp50, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.B = tmp50
	tmp51, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.A = tmp51
	return err
}
type Rgoc_Null struct {
	Placeholder []byte
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Null() *Rgoc_Null {
	return &Rgoc_Null{
	}
}

func (this *Rgoc_Null) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp52, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	this.Placeholder = tmp52
	if !(bytes.Equal(this.Placeholder, []uint8{0})) {
		return kaitai.NewValidationNotEqualError([]uint8{0}, this.Placeholder, this._io, "/types/null/seq/0")
	}
	return err
}
type Rgoc_CodeSpec struct {
	Uuid *Rgoc_Uuid
	NumInstructions uint64
	Instructions []uint8
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc
}
func NewRgoc_CodeSpec() *Rgoc_CodeSpec {
	return &Rgoc_CodeSpec{
	}
}

func (this *Rgoc_CodeSpec) Read(io *kaitai.Stream, parent *Rgoc, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp53 := NewRgoc_Uuid()
	err = tmp53.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Uuid = tmp53
	tmp54, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumInstructions = uint64(tmp54)
	for i := 0; i < int(this.NumInstructions); i++ {
		_ = i
		tmp55, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.Instructions = append(this.Instructions, tmp55)
	}
	return err
}
type Rgoc_StopChannel struct {
	ChanName string
	Ms uint64
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_StopChannel() *Rgoc_StopChannel {
	return &Rgoc_StopChannel{
	}
}

func (this *Rgoc_StopChannel) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp56, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.ChanName = string(tmp56)
	tmp57, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.Ms = uint64(tmp57)
	return err
}
type Rgoc_Object struct {
	Type Rgoc_ObjectType
	Body interface{}
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Object() *Rgoc_Object {
	return &Rgoc_Object{
	}
}

func (this *Rgoc_Object) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp58, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Type = Rgoc_ObjectType(tmp58)
	switch (this.Type) {
	case Rgoc_ObjectType__Array:
		tmp59 := NewRgoc_Array()
		err = tmp59.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp59
	case Rgoc_ObjectType__String:
		tmp60, err := this._io.ReadBytesTerm(0, false, true, true)
		if err != nil {
			return err
		}
		this.Body = string(tmp60)
	case Rgoc_ObjectType__Null:
		tmp61 := NewRgoc_Null()
		err = tmp61.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp61
	case Rgoc_ObjectType__LabelObject:
		tmp62 := NewRgoc_LabelObject()
		err = tmp62.Read(this._io, this.Body.(*Rgoc_Label), this._root)
		if err != nil {
			return err
		}
		this.Body = tmp62
	case Rgoc_ObjectType__Boolean:
		tmp63, err := this._io.ReadBitsIntBe(1)
		if err != nil {
			return err
		}
		this.Body = tmp63 != 0
	case Rgoc_ObjectType__Integer:
		tmp64, err := this._io.ReadU8le()
		if err != nil {
			return err
		}
		this.Body = tmp64
	case Rgoc_ObjectType__Error:
		tmp65 := NewRgoc_Error()
		err = tmp65.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp65
	case Rgoc_ObjectType__ScreenObject:
		tmp66 := NewRgoc_ScreenObject()
		err = tmp66.Read(this._io, this.Body.(*Rgoc_Screen), this._root)
		if err != nil {
			return err
		}
		this.Body = tmp66
	case Rgoc_ObjectType__Float:
		tmp67, err := this._io.ReadF8le()
		if err != nil {
			return err
		}
		this.Body = tmp67
	}
	return err
}
type Rgoc_XCenter struct {
	YPos float32
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_SpecialTransform
}
func NewRgoc_XCenter() *Rgoc_XCenter {
	return &Rgoc_XCenter{
	}
}

func (this *Rgoc_XCenter) Read(io *kaitai.Stream, parent *Rgoc_SpecialTransform, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp68, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.YPos = float32(tmp68)
	return err
}
type Rgoc_Key struct {
	Down *Rgoc_Code
	Up *Rgoc_Code
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_ScreenObject
}
func NewRgoc_Key() *Rgoc_Key {
	return &Rgoc_Key{
	}
}

func (this *Rgoc_Key) Read(io *kaitai.Stream, parent *Rgoc_ScreenObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp69 := NewRgoc_Code()
	err = tmp69.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Down = tmp69
	tmp70 := NewRgoc_Code()
	err = tmp70.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Up = tmp70
	return err
}
type Rgoc_Code struct {
	Ref *Rgoc_Uuid
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Code() *Rgoc_Code {
	return &Rgoc_Code{
	}
}

func (this *Rgoc_Code) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp71 := NewRgoc_Uuid()
	err = tmp71.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Ref = tmp71
	return err
}
type Rgoc_SpecialTransform struct {
	Type Rgoc_SpecialTransformType
	Body interface{}
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_Transform
}
func NewRgoc_SpecialTransform() *Rgoc_SpecialTransform {
	return &Rgoc_SpecialTransform{
	}
}

func (this *Rgoc_SpecialTransform) Read(io *kaitai.Stream, parent *Rgoc_Transform, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp72, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Type = Rgoc_SpecialTransformType(tmp72)
	switch (this.Type) {
	case Rgoc_SpecialTransformType__Center:
		tmp73 := NewRgoc_Center()
		err = tmp73.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp73
	case Rgoc_SpecialTransformType__XCenter:
		tmp74 := NewRgoc_XCenter()
		err = tmp74.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp74
	case Rgoc_SpecialTransformType__YCenter:
		tmp75 := NewRgoc_YCenter()
		err = tmp75.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp75
	case Rgoc_SpecialTransformType__AxisCenter:
		tmp76 := NewRgoc_AxisCenter()
		err = tmp76.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp76
	}
	return err
}
type Rgoc_Array struct {
	NumObj uint64
	Obj []*Rgoc_Object
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Array() *Rgoc_Array {
	return &Rgoc_Array{
	}
}

func (this *Rgoc_Array) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp77, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumObj = uint64(tmp77)
	for i := 0; i < int(this.NumObj); i++ {
		_ = i
		tmp78 := NewRgoc_Object()
		err = tmp78.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Obj = append(this.Obj, tmp78)
	}
	return err
}
type Rgoc_LabelObject struct {
	Type Rgoc_LabelObjType
	Body interface{}
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_Label
}
func NewRgoc_LabelObject() *Rgoc_LabelObject {
	return &Rgoc_LabelObject{
	}
}

func (this *Rgoc_LabelObject) Read(io *kaitai.Stream, parent *Rgoc_Label, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp79, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Type = Rgoc_LabelObjType(tmp79)
	switch (this.Type) {
	case Rgoc_LabelObjType__PlayMusic:
		tmp80 := NewRgoc_PlayMusic()
		err = tmp80.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp80
	case Rgoc_LabelObjType__PlayChannel:
		tmp81 := NewRgoc_PlayChannel()
		err = tmp81.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp81
	case Rgoc_LabelObjType__StopVideo:
		tmp82 := NewRgoc_StopVideo()
		err = tmp82.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp82
	case Rgoc_LabelObjType__Show:
		tmp83 := NewRgoc_Show()
		err = tmp83.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp83
	case Rgoc_LabelObjType__Call:
		tmp84 := NewRgoc_Call()
		err = tmp84.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp84
	case Rgoc_LabelObjType__Pause:
		tmp85 := NewRgoc_Pause()
		err = tmp85.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp85
	case Rgoc_LabelObjType__StopChannel:
		tmp86 := NewRgoc_StopChannel()
		err = tmp86.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp86
	case Rgoc_LabelObjType__Say:
		tmp87 := NewRgoc_Say()
		err = tmp87.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp87
	case Rgoc_LabelObjType__Hide:
		tmp88 := NewRgoc_Hide()
		err = tmp88.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp88
	case Rgoc_LabelObjType__Jump:
		tmp89 := NewRgoc_Jump()
		err = tmp89.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp89
	case Rgoc_LabelObjType__StopMusic:
		tmp90 := NewRgoc_StopMusic()
		err = tmp90.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp90
	case Rgoc_LabelObjType__Code:
		tmp91 := NewRgoc_Code()
		err = tmp91.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp91
	case Rgoc_LabelObjType__PlayVideo:
		tmp92 := NewRgoc_PlayVideo()
		err = tmp92.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp92
	}
	return err
}
type Rgoc_Button struct {
	MainImageName string
	HoverImageName string
	Transform *Rgoc_Transform
	NumAnime uint64
	Anime []*Rgoc_Anime
	Down *Rgoc_Code
	Up *Rgoc_Code
	Hover *Rgoc_Code
	UnHover *Rgoc_Code
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_ScreenObject
}
func NewRgoc_Button() *Rgoc_Button {
	return &Rgoc_Button{
	}
}

func (this *Rgoc_Button) Read(io *kaitai.Stream, parent *Rgoc_ScreenObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp93, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.MainImageName = string(tmp93)
	tmp94, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.HoverImageName = string(tmp94)
	tmp95 := NewRgoc_Transform()
	err = tmp95.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Transform = tmp95
	tmp96, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumAnime = uint64(tmp96)
	for i := 0; i < int(this.NumAnime); i++ {
		_ = i
		tmp97 := NewRgoc_Anime()
		err = tmp97.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Anime = append(this.Anime, tmp97)
	}
	tmp98 := NewRgoc_Code()
	err = tmp98.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Down = tmp98
	tmp99 := NewRgoc_Code()
	err = tmp99.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Up = tmp99
	tmp100 := NewRgoc_Code()
	err = tmp100.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Hover = tmp100
	tmp101 := NewRgoc_Code()
	err = tmp101.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.UnHover = tmp101
	return err
}
type Rgoc_Vec2 struct {
	X float32
	Y float32
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Vec2() *Rgoc_Vec2 {
	return &Rgoc_Vec2{
	}
}

func (this *Rgoc_Vec2) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp102, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.X = float32(tmp102)
	tmp103, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Y = float32(tmp103)
	return err
}
type Rgoc_Hide struct {
	TextureIndex uint64
	Anime *Rgoc_Anime
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_Hide() *Rgoc_Hide {
	return &Rgoc_Hide{
	}
}

func (this *Rgoc_Hide) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp104, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.TextureIndex = uint64(tmp104)
	tmp105 := NewRgoc_Anime()
	err = tmp105.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Anime = tmp105
	return err
}
type Rgoc_Error struct {
	Message string
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Error() *Rgoc_Error {
	return &Rgoc_Error{
	}
}

func (this *Rgoc_Error) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp106, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Message = string(tmp106)
	return err
}
type Rgoc_Screen struct {
	Name string
	NumObj uint64
	Obj []*Rgoc_ScreenObject
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc
}
func NewRgoc_Screen() *Rgoc_Screen {
	return &Rgoc_Screen{
	}
}

func (this *Rgoc_Screen) Read(io *kaitai.Stream, parent *Rgoc, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp107, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp107)
	tmp108, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumObj = uint64(tmp108)
	for i := 0; i < int(this.NumObj); i++ {
		_ = i
		tmp109 := NewRgoc_ScreenObject()
		err = tmp109.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Obj = append(this.Obj, tmp109)
	}
	return err
}
type Rgoc_Character struct {
	Name string
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_Say
}
func NewRgoc_Character() *Rgoc_Character {
	return &Rgoc_Character{
	}
}

func (this *Rgoc_Character) Read(io *kaitai.Stream, parent *Rgoc_Say, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp110, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp110)
	return err
}
type Rgoc_Bar struct {
	FrameImageName string
	CursorImageName string
	CurserHoverImageName string
	GaugeImageName string
	FrameImageTransform *Rgoc_Transform
	CursorSize *Rgoc_Vec2
	StartPadding float32
	EndPadding float32
	SidePadding float32
	IsVertical bool
	MaxValue float32
	MinValue float32
	InitValue float32
	Down *Rgoc_Code
	Up *Rgoc_Code
	Scroll *Rgoc_Code
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_ScreenObject
}
func NewRgoc_Bar() *Rgoc_Bar {
	return &Rgoc_Bar{
	}
}

func (this *Rgoc_Bar) Read(io *kaitai.Stream, parent *Rgoc_ScreenObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp111, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.FrameImageName = string(tmp111)
	tmp112, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.CursorImageName = string(tmp112)
	tmp113, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.CurserHoverImageName = string(tmp113)
	tmp114, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.GaugeImageName = string(tmp114)
	tmp115 := NewRgoc_Transform()
	err = tmp115.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.FrameImageTransform = tmp115
	tmp116 := NewRgoc_Vec2()
	err = tmp116.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.CursorSize = tmp116
	tmp117, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.StartPadding = float32(tmp117)
	tmp118, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.EndPadding = float32(tmp118)
	tmp119, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.SidePadding = float32(tmp119)
	tmp120, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.IsVertical = tmp120 != 0
	this._io.AlignToByte()
	tmp121, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.MaxValue = float32(tmp121)
	tmp122, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.MinValue = float32(tmp122)
	tmp123, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.InitValue = float32(tmp123)
	tmp124 := NewRgoc_Code()
	err = tmp124.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Down = tmp124
	tmp125 := NewRgoc_Code()
	err = tmp125.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Up = tmp125
	tmp126 := NewRgoc_Code()
	err = tmp126.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Scroll = tmp126
	return err
}
type Rgoc_YCenter struct {
	XPos float32
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_SpecialTransform
}
func NewRgoc_YCenter() *Rgoc_YCenter {
	return &Rgoc_YCenter{
	}
}

func (this *Rgoc_YCenter) Read(io *kaitai.Stream, parent *Rgoc_SpecialTransform, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp127, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.XPos = float32(tmp127)
	return err
}
type Rgoc_Say struct {
	Character *Rgoc_Character
	Text string
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_Say() *Rgoc_Say {
	return &Rgoc_Say{
	}
}

func (this *Rgoc_Say) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp128 := NewRgoc_Character()
	err = tmp128.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Character = tmp128
	tmp129, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Text = string(tmp129)
	return err
}
type Rgoc_Anime struct {
	Loop bool
	Type Rgoc_AnimeType
	InitValue float64
	StartTime float64
	Duration float64
	Curve *Rgoc_Code
	End *Rgoc_Code
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Anime() *Rgoc_Anime {
	return &Rgoc_Anime{
	}
}

func (this *Rgoc_Anime) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp130, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Loop = tmp130 != 0
	this._io.AlignToByte()
	tmp131, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Type = Rgoc_AnimeType(tmp131)
	tmp132, err := this._io.ReadF8le()
	if err != nil {
		return err
	}
	this.InitValue = float64(tmp132)
	tmp133, err := this._io.ReadF8le()
	if err != nil {
		return err
	}
	this.StartTime = float64(tmp133)
	tmp134, err := this._io.ReadF8le()
	if err != nil {
		return err
	}
	this.Duration = float64(tmp134)
	tmp135 := NewRgoc_Code()
	err = tmp135.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Curve = tmp135
	tmp136 := NewRgoc_Code()
	err = tmp136.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.End = tmp136
	return err
}
type Rgoc_Call struct {
	LabelName string
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_Call() *Rgoc_Call {
	return &Rgoc_Call{
	}
}

func (this *Rgoc_Call) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp137, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.LabelName = string(tmp137)
	return err
}
type Rgoc_Transform struct {
	Pos *Rgoc_Vec2
	Size *Rgoc_Vec2
	Flip *Rgoc_Vec2
	Rotate float32
	SpecialTransform *Rgoc_SpecialTransform
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_Transform() *Rgoc_Transform {
	return &Rgoc_Transform{
	}
}

func (this *Rgoc_Transform) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp138 := NewRgoc_Vec2()
	err = tmp138.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Pos = tmp138
	tmp139 := NewRgoc_Vec2()
	err = tmp139.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Size = tmp139
	tmp140 := NewRgoc_Vec2()
	err = tmp140.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Flip = tmp140
	tmp141, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Rotate = float32(tmp141)
	tmp142 := NewRgoc_SpecialTransform()
	err = tmp142.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.SpecialTransform = tmp142
	return err
}
type Rgoc_StopMusic struct {
	Ms uint64
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_StopMusic() *Rgoc_StopMusic {
	return &Rgoc_StopMusic{
	}
}

func (this *Rgoc_StopMusic) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp143, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.Ms = uint64(tmp143)
	return err
}
type Rgoc_PlayMusic struct {
	Path string
	Loop bool
	Ms uint64
	_io *kaitai.Stream
	_root *Rgoc
	_parent interface{}
}
func NewRgoc_PlayMusic() *Rgoc_PlayMusic {
	return &Rgoc_PlayMusic{
	}
}

func (this *Rgoc_PlayMusic) Read(io *kaitai.Stream, parent interface{}, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp144, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Path = string(tmp144)
	tmp145, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Loop = tmp145 != 0
	this._io.AlignToByte()
	tmp146, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.Ms = uint64(tmp146)
	return err
}
type Rgoc_StopVideo struct {
	Name string
	NumAnime uint64
	Anime []*Rgoc_Anime
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_LabelObject
}
func NewRgoc_StopVideo() *Rgoc_StopVideo {
	return &Rgoc_StopVideo{
	}
}

func (this *Rgoc_StopVideo) Read(io *kaitai.Stream, parent *Rgoc_LabelObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp147, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Name = string(tmp147)
	tmp148, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumAnime = uint64(tmp148)
	for i := 0; i < int(this.NumAnime); i++ {
		_ = i
		tmp149 := NewRgoc_Anime()
		err = tmp149.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Anime = append(this.Anime, tmp149)
	}
	return err
}
type Rgoc_Timer struct {
	Time float64
	Do *Rgoc_Code
	_io *kaitai.Stream
	_root *Rgoc
	_parent *Rgoc_ScreenObject
}
func NewRgoc_Timer() *Rgoc_Timer {
	return &Rgoc_Timer{
	}
}

func (this *Rgoc_Timer) Read(io *kaitai.Stream, parent *Rgoc_ScreenObject, root *Rgoc) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp150, err := this._io.ReadF8le()
	if err != nil {
		return err
	}
	this.Time = float64(tmp150)
	tmp151 := NewRgoc_Code()
	err = tmp151.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Do = tmp151
	return err
}
